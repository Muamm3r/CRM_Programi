<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnKaydet.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qpkJdvuTLgAAAABJRU5ErkJggg==
</value>
  </data>
</root>